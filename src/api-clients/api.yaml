openapi: 3.0.1
info:
  title: SeekerAPI
  version: '1.0'
paths:
  /Filter/addFilter:
    post:
      tags:
        - Filter
      parameters:
        - name: text
          in: query
          style: form
          schema:
            type: string
        - name: type
          in: query
          style: form
          schema:
            enum:
              - None
              - Important
              - AutoIgnore
              - Hidden
              - Applied
            type: string
        - name: subtype
          in: query
          style: form
          schema:
            enum:
              - Content
              - Title
            type: string
      responses:
        '200':
          description: Success
  /Filter/getAllFilters:
    get:
      tags:
        - Filter
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFilter'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFilter'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFilter'
  /Job:
    get:
      tags:
        - Job
      parameters:
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          style: form
          schema:
            enum:
              - None
              - Important
              - AutoIgnore
              - Hidden
              - Applied
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobRequestResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/JobRequestResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobRequestResponse'
  /Job/retrieveJobs:
    post:
      tags:
        - Job
      responses:
        '200':
          description: Success
  /Job/hide:
    post:
      tags:
        - Job
      parameters:
        - name: jobId
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: pageLength
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          style: form
          schema:
            enum:
              - None
              - Important
              - AutoIgnore
              - Hidden
              - Applied
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobMoveResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/JobMoveResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobMoveResponse'
  /Job/apply:
    post:
      tags:
        - Job
      parameters:
        - name: jobId
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: pageLength
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          style: form
          schema:
            enum:
              - None
              - Important
              - AutoIgnore
              - Hidden
              - Applied
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobMoveResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/JobMoveResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobMoveResponse'
  /JobRequest:
    get:
      tags:
        - JobRequest
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobRequest'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobRequest'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobRequest'
  /insertRequest:
    post:
      tags:
        - JobRequest
      parameters:
        - name: request
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
  /ServiceState:
    get:
      tags:
        - ServiceState
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SyncState'
            application/json:
              schema:
                $ref: '#/components/schemas/SyncState'
            text/json:
              schema:
                $ref: '#/components/schemas/SyncState'
components:
  schemas:
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int32
        preview:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        postedDate:
          type: string
          format: date-time
        filter:
          enum:
            - None
            - Important
            - AutoIgnore
            - Hidden
            - Applied
          type: string
      additionalProperties: false
    JobFilter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
        type:
          enum:
            - None
            - Important
            - AutoIgnore
            - Hidden
            - Applied
          type: string
        subtype:
          enum:
            - Content
            - Title
          type: string
      additionalProperties: false
    JobMoveResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
        fullCount:
          type: integer
          format: int32
      additionalProperties: false
    JobRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
        lastUpdateDate:
          type: string
          format: date-time
      additionalProperties: false
    JobRequestResponse:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          nullable: true
        fullCount:
          type: integer
          format: int32
      additionalProperties: false
    SyncState:
      type: object
      properties:
        inProgress:
          type: boolean
        currentRequest:
          type: string
          nullable: true
        progressPercentage:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        currentPagePercentage:
          type: integer
          format: int32
        startedAt:
          type: string
          format: date-time
        uniqJobsCount:
          type: integer
          format: int32
        importantCount:
          type: integer
          format: int32
        autoIgnoredCount:
          type: integer
          format: int32
      additionalProperties: false